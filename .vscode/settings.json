{
    "editor.tabSize": 2,
    "editor.rulers": [
        100
    ],
    "files.associations": {
        "*.repos": "yaml",
        "*.world": "xml",
        "*.xacro": "xml"
    },
    "python.analysis.extraPaths": [
        "/opt/ros/foxy/lib/python3.8/site-packages/"
    ],
    // Autocomplete from ros python packages
    "python.autoComplete.extraPaths": [
        "/opt/ros/foxy/lib/python3.8/site-packages/"
    ],
    // Environment file lets vscode find python files within workspace
    "python.envFile": "${workspaceFolder}/.env",
    // Use the system installed version of autopep8
    "python.formatting.autopep8Path": "/usr/bin/autopep8",
    "python.formatting.autopep8Args": [
        "--max-line-length=100"
    ],
    "C_Cpp.default.intelliSenseMode": "clang-x64",
    "C_Cpp.formatting": "Disabled",
    "uncrustify.configPath.linux": "/opt/ros/foxy/lib/python3.8/site-packages/ament_uncrustify/configuration/ament_code_style.cfg",
    "[cpp]": {
        "editor.defaultFormatter": "zachflower.uncrustify"
    },
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/build": true,
        "**/install": true,
        "**/log": true
    },
    "cSpell.words": [
        "RTPS",
        "athackst",
        "autopep",
        "cmake",
        "cppcheck",
        "cpplint",
        "DCMAKE",
        "deque",
        "devcontainer",
        "ints",
        "noqa",
        "pytest",
        "rclcpp",
        "rclpy",
        "repos",
        "rosdep",
        "rosdistro",
        "rosidl",
        "RTPS",
        "uncrustify",
        "Wextra",
        "Wpedantic",
        "xmllint"
    ],
    "cSpell.allowCompoundWords": true,
    "cSpell.ignorePaths": [
        "**/package-lock.json",
        "**/node_modules/**",
        "**/vscode-extension/**",
        "**/.git/objects/**",
        ".vscode",
        ".vscode-insiders",
        ".devcontainer/devcontainer.json"
    ],
    "python.linting.flake8Enabled": true,
    "python.linting.enabled": true,

    //  File copyright documentation tag.  Array of strings will be converted to one line per element.  Can template {year}.
  "doxdocgen.file.copyrightTag": [
    "Copyright {year} â’¸ Amro Al-Baali"
  ],
  "doxdocgen.generic.boolReturnsTrueFalse": false,
  "doxdocgen.generic.paramTemplate": "@param[in] {param} ",

  //  Set the e-mail address of the author.  Replaces {email}.
  "doxdocgen.generic.authorEmail": "albaalia@live.com",
  // Set the name of the author.  Replaces {author}.
  "doxdocgen.generic.authorName": "Amro Al-Baali",
  // The template of the brief Doxygen line that is generated. If empty it won't get generated at all.
  "doxdocgen.generic.briefTemplate": "@brief {text}",
  // Additional file documentation. One tag per line will be added. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.
  // "doxdocgen.file.customTag": [],
  // The format to use for the date.
  "doxdocgen.generic.dateFormat": "YYYY-MMM-DD",
  "doxdocgen.file.fileOrder": [
    "copyright",
    "file",
    "brief",
    "author",
    // "version",
    "date",
    // "empty",
  ],
  "cSpell.blockCheckingWhenAverageChunkSizeGreaterThan": 100,
  "C/C++ Include Guard.Macro Type": "Filepath",
  "C/C++ Include Guard.Comment Style": "Line",
  "C/C++ Include Guard.Path Skip": 1,
  "C/C++ Include Guard.Spaces After Endif": 1,
  "C/C++ Include Guard.Suffix": "_",
  "C/C++ Include Guard.Remove Extension": false,
}